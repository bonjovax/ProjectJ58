<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <metadata name="txtBoxQty.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>
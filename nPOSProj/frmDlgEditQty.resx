<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="txtBoxQty.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>